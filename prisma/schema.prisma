generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  username String   @unique
  password String
  reports  Report[]
  templates Templates[]
  comments Comment[]

  @@index([id, email, username])
}

model Report {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comments  Comment[]
  isPosted  Boolean  @default(true)

  @@index([id, title, content, createdAt, updatedAt, authorId, isPosted])
}

model Templates {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  reportId  Int
  report    Report   @relation(fields: [reportId], references: [id], onDelete: Cascade)
}

model Todo {
  id          Int     @id @default(autoincrement())
  name        String
  isCompleted Boolean @default(false)
}